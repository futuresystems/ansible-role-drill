---

- name: download
  get_url:
    url: "{{ _drill_archive[drill_version][drill_distribution].url }}"
    checksum: "sha256:{{ _drill_archive[drill_version][drill_distribution].sha256 }}"
    dest: "{{ ansible_env.HOME }}/{{ _drill_package_name }}"

- name: extract
  unarchive:
    copy: false
    src: "{{ ansible_env.HOME }}/{{ _drill_package_name }}"
    dest: "{{ drill_install_prefix }}"

- name: link
  file:
    src: "{{ _drill_install_path }}"
    dest: "{{ _drill_install_name }}"
    state: link

- name: configure memory
  lineinfile:
    dest: "/opt/drill/conf/drill-env.sh"
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    backrefs: yes
    state: present
  with_items:
    - regexp: '^(DRILL_MAX_DIRECT_MEMORY)=".+"'
      line: '\1="{{ drill_max_direct_memory }}"'
    - regexp: '^(DRILL_HEAP)=".+"'
      line: '\1="{{ drill_heap }}"'

- name: add environment to profile.d
  lineinfile:
    dest: "/etc/profile.d/drill.sh"
    line: "export {{ item }}"
    create: yes
  with_items:
    - DRILL_HOME="{{ _drill_install_name }}"
    - PATH="$PATH:$DRILL_HOME/bin"

- name: fix permissions
  file:
    path: "{{ _drill_install_path }}"
    owner: "{{ drill_user }}"
    group: "{{ drill_group }}"
    recurse: yes

- name: start drillbit
  become: yes
  become_user: "{{ drill_user }}"
  shell:
    cmd: sh -lc "drillbit.sh start"
    creates: "{{ _drill_install_path }}/drillbit.pid"

- name: wait for drillbit to start
  wait_for:
    port: "{{ _drill_webconsole_port }}"
    state: started
    timeout: "{{ drill_wait_for_drillbit_timeout }}"


- include: plugins.yml
